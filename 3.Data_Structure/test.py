from stack import Stack
from queue import Queue
from bst import BinarySearchTree

# Stack
print("\n\nStack Start \n\n")
stack = Stack()
stack.push(1)
stack.push(2)
print(stack)
print(stack.top())
print(stack.is_empty())
print(stack.pop())
print(stack[0])
print(stack.length())
print(stack.pop())
print(stack.is_empty())
print(stack)

# Queue
print("\n\nQueue Start \n\n")
queue = Queue()
queue.put(1)
queue.put(2)
queue.put(3)
print(queue)
print(queue.front())
print(queue[0])
print(queue.rear())
print(queue.is_empty())
print(queue.get())
print(queue.get())
print(queue.get())
print(queue.is_empty())

# BST
print("\n\nBST Start \n\n")
bst = BinarySearchTree()
bst.insert(3)
bst.insert(5)
bst.insert(4)
bst.insert(1)
bst.insert(2)
bst.in_order_execute(print)
bst.post_order_execute(print)
bst.pre_order_execute(print)
bst.delete(3)
bst.delete(5)
bst.in_order_execute(print)
print(bst.get(3))
print(bst.get(4))